version: '3.8'

services:
  # Redis for local development
  dev_redis:
    image: redis:7-alpine
    container_name: mardi_gras_dev_redis
    command: redis-server --requirepass devpass --appendonly yes
    ports:
      - "6379:6379"
    volumes:
      - dev_redis_data:/data
    healthcheck:
      test: ["CMD", "redis-cli", "-a", "devpass", "ping"]
      interval: 10s
      timeout: 3s
      retries: 5

  # MailHog for email testing
  mailhog:
    image: mailhog/mailhog:latest
    container_name: mardi_gras_dev_mail
    ports:
      - "1025:1025"  # SMTP
      - "8025:8025"  # Web UI
    healthcheck:
      test: ["CMD", "nc", "-z", "localhost", "1025"]
      interval: 10s
      timeout: 3s
      retries: 5

  # Optional: PostgreSQL for production-like development
  dev_postgres:
    image: postgres:15-alpine
    container_name: mardi_gras_dev_postgres
    environment:
      POSTGRES_DB: mardi_gras_dev
      POSTGRES_USER: devuser
      POSTGRES_PASSWORD: devpass
    ports:
      - "5432:5432"
    volumes:
      - dev_postgres_data:/var/lib/postgresql/data
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U devuser -d mardi_gras_dev"]
      interval: 10s
      timeout: 5s
      retries: 5
    profiles:
      - postgres  # Optional profile

  # Optional: pgAdmin for database management
  pgadmin:
    image: dpage/pgadmin4:latest
    container_name: mardi_gras_dev_pgadmin
    environment:
      PGADMIN_DEFAULT_EMAIL: admin@dev.local
      PGADMIN_DEFAULT_PASSWORD: devpass
    ports:
      - "5050:80"
    depends_on:
      - dev_postgres
    profiles:
      - tools

volumes:
  dev_redis_data:
  dev_postgres_data:

networks:
  default:
    name: mardi_gras_dev_network
